/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ctpv;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import tpv.ProductoPedido;

/**
 *
 * @author Jorge
 */
public class CTPV extends javax.swing.JFrame {
    
    private static final int NUM_CLIENTES = 6;
    private int contadorVentanas = 0;
    private int contadorTPV = 1;
    
    private HiloEscuchador escuchador;
    private HashMap<Long, VentanaInterna> ventanasInternas;
    File archivo;
    FileWriter fw;
    BufferedWriter fichero;
    
    /**
     * Creates new form CTPV
     */
    public CTPV() {
        try {
            initComponents();
            //setIconImage(new ImageIcon(getClass().getResource("/ctpv/icono.png")).getImage());
            ventanasInternas = new HashMap<Long, VentanaInterna>();
            new HiloEscuchador(this).start();
            archivo = new File("Ventas.txt");
            fw = new FileWriter(archivo);
            fichero = new BufferedWriter(fw);
            addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                try {
                    fichero.close();
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(CTPV.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        } catch (IOException ex) {
            Logger.getLogger(CTPV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CTPV");
        setExtendedState(MAXIMIZED_BOTH);
        setMinimumSize(new java.awt.Dimension(820, 608));

        jDesktopPane1.setBackground(new java.awt.Color(240, 240, 240));
        jDesktopPane1.setLayout(new java.awt.GridLayout(0, 3));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CTPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CTPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CTPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CTPV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CTPV().setVisible(true);
            }
        });
    }
    public void a√±adirVentana(long id){
		VentanaInterna cliente = new VentanaInterna(contadorVentanas);
		ventanasInternas.put(id, cliente);
		cliente.setLocation(50, 26);
		cliente.setVisible(true);
		jDesktopPane1.add(cliente);
                contadorVentanas++;
                contadorTPV++;
    }
	
    public void removerVentana(long id){
        try{
            VentanaInterna cliente = ventanasInternas.get(id);
            DefaultTableModel tabla = (DefaultTableModel) cliente.getjTable1().getModel();
            fichero.append(cliente.getTitle() + "\n");
            for (int i = 0; i < tabla.getRowCount(); i++) {
                String lineaPedido = "";
                for (int j = 0; j < tabla.getColumnCount(); j++) {
                    lineaPedido += tabla.getValueAt(i, j);
                }
                fichero.append(lineaPedido + "\n");
            }
            fichero.append("\n");
            jDesktopPane1.remove(cliente);
            JOptionPane.showMessageDialog(null, "Cliente servido.");
            repaint();
            contadorTPV--;
        }catch (NullPointerException e) {
        } catch (IOException ex) {
            Logger.getLogger(CTPV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public VentanaInterna getVentanaInterna(long id){
        return ventanasInternas.get(id);
    }
    
    public int getContadorTPV() {
        return contadorTPV;
    }

    public int getContadorVentanas() {
        return contadorVentanas;
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    // End of variables declaration//GEN-END:variables
}
